# ==========================================
# DATABASE - NEON POSTGRES
# ==========================================

# Primary database URL (with connection pooling via PgBouncer)
DATABASE_URL=postgresql://USER:PASSWORD@HOST-pooler.region.aws.neon.tech/DATABASE?sslmode=require

# Direct connection (without pooling) - use for migrations if needed
DATABASE_URL_UNPOOLED=postgresql://USER:PASSWORD@HOST.region.aws.neon.tech/DATABASE?sslmode=require

# ==========================================
# NEXTAUTH AUTHENTICATION
# ==========================================

# Generate this with: openssl rand -base64 32
NEXTAUTH_SECRET=

# Production URL (for Vercel deployment)
NEXTAUTH_URL=https://your-domain.com
# For local development:
# NEXTAUTH_URL=http://localhost:3000

# ==========================================
# OAUTH PROVIDERS
# ==========================================

# Google OAuth (get from: https://console.cloud.google.com/)
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# GitHub OAuth (get from: https://github.com/settings/developers)
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=

# ==========================================
# AI INTEGRATION
# ==========================================

# Anthropic Claude API Key (get from: https://console.anthropic.com/)
ANTHROPIC_API_KEY=

# OpenRouter API Key (get from: https://openrouter.ai/keys) - Optional fallback
OPENROUTER_API_KEY=

# ==========================================
# EMAIL CONFIGURATION (RESEND)
# ==========================================

# Resend API Key (get from: https://resend.com/api-keys)
RESEND_API_KEY=

# Email sender address (using verified domain)
EMAIL_FROM=YourApp <noreply@yourdomain.com>

# ==========================================
# RATE LIMITING (UPSTASH REDIS)
# ==========================================

# Get these from: https://console.upstash.com/redis
UPSTASH_REDIS_REST_URL=
UPSTASH_REDIS_REST_TOKEN=

# ==========================================
# REAL-TIME (ABLY)
# ==========================================

# Get from: https://ably.com/accounts
ABLY_API_KEY=

# ==========================================
# STRIPE PAYMENT PROCESSING
# ==========================================

# IMPORTANT: Use TEST keys for development, LIVE keys for production only!
# Get from: https://dashboard.stripe.com/apikeys

STRIPE_PUBLISHABLE_KEY=
STRIPE_SECRET_KEY=
STRIPE_WEBHOOK_SECRET=

# Stripe Product/Price IDs (from your Stripe dashboard)
NEXT_PUBLIC_STRIPE_PRO_MONTHLY_PRICE_ID=
NEXT_PUBLIC_STRIPE_PRO_ANNUAL_PRICE_ID=
NEXT_PUBLIC_STRIPE_TEAM_MONTHLY_PRICE_ID=
NEXT_PUBLIC_STRIPE_TEAM_ANNUAL_PRICE_ID=
NEXT_PUBLIC_STRIPE_ENTERPRISE_PRODUCT_ID=
NEXT_PUBLIC_STRIPE_BOOSTER_PRICE_ID=
NEXT_PUBLIC_STRIPE_OVERAGE_PRICE_ID=

# ==========================================
# APP CONFIGURATION
# ==========================================

# Public app URL
NEXT_PUBLIC_APP_URL=https://your-domain.com

# Feature Flags
NEXT_PUBLIC_ENABLE_STORY_SPLIT=true

# Node Environment (set automatically by Vercel)
NODE_ENV=development

# ==========================================
# CRON JOB SECURITY
# ==========================================

# Generate with: openssl rand -base64 32
# Used to secure cron endpoints
CRON_SECRET=

# ==========================================
# ERROR TRACKING & MONITORING (SENTRY)
# ==========================================

# Get from: https://sentry.io/ after creating a project
# Public DSN (safe to expose to clients)
NEXT_PUBLIC_SENTRY_DSN=

# Organization slug (for uploading source maps during builds)
SENTRY_ORG=

# Project name in Sentry
SENTRY_PROJECT=

# Auth token for uploading source maps (keep secret!)
SENTRY_AUTH_TOKEN=

# ==========================================
# OPTIONAL: STACK AUTH (Alternative to NextAuth)
# ==========================================

NEXT_PUBLIC_STACK_PROJECT_ID=
NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY=
STACK_SECRET_SERVER_KEY=

# ==========================================
# NOTES
# ==========================================

# 1. NEVER commit this file with real values to Git
# 2. For production, set these in Vercel environment variables
# 3. Use separate databases for development and production
# 4. Use Stripe TEST keys in development, LIVE keys in production only
# 5. Rotate all secrets regularly (every 90 days minimum)
